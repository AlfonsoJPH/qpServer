
# Default server configuration
#
server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /home/alfonso/web/webpage/;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	# server_name _;
    server_name vaelico.es www.vaelico.es vaelico.ddns.net;

	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass    127.0.0.1:9000;
		include         fastcgi_params;
		fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
		# With php-fpm (or other unix sockets):
		# fastcgi_pass unix:/run/php/php7.4-fpm.sock;
		# With php-cgi (or other tcp sockets):
		#fastcgi_pass 127.0.0.1:9000;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		autoindex on;  # Habilitar la indexaci√≥n de directorios
	}

    location /pdoolingo/ {
        proxy_pass http://localhost:4321/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /pdoolingo2/ {
        proxy_pass http://localhost:4322/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /pdoolingoback/ {
        proxy_pass http://localhost:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /pdoolingodb/ {
        proxy_pass http://localhost:3306/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /adminer/ {
        proxy_pass http://localhost:22501/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


    # listen 443 ssl; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/vaelico.es/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/vaelico.es/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/vaelico.es/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/vaelico.es/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

# server {
#     if ($host = www.vaelico.es) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     if ($host = vaelico.es) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     server_name vaelico.es www.vaelico.es;
#     listen 80;
#     return 404; # managed by Certbot




# }

server {
    if ($host = www.vaelico.es) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = vaelico.es) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name vaelico.es www.vaelico.es;
    return 404; # managed by Certbot
}
